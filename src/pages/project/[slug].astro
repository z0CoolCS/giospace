---
import { CollectionEntry, getCollection } from 'astro:content';
import { ProjectSchema } from '../../content/config';
import ProjectLayout from '../../layouts/ProjectLayout.astro';
import TableContent from "../../components/TableContent.astro";

export async function getStaticPaths() {
    const postEntries = await getCollection('project');
    return postEntries.map(entry => ( { 
        params: { slug: entry.slug }, props: { entry }
    } ));
}

interface Props {
    entry: CollectionEntry<"project">;
}

const { entry } = Astro.props;
const post : ProjectSchema = entry.data;
const { Content, headings } = await entry.render();
---


<ProjectLayout 
    title={post.title} 
    description={post.description} 
    pubDate={post.pubDate} 
    heroImage={post.heroImage} 
    updatedDate={post.updatedDate} 
    badge={post.badge}>

    <TableContent pageHeadings={headings} />
    <Content />
</ProjectLayout>


<script>
  let copyButtonLabel = "Copy Code";
  let codeBlocks = Array.from(document.querySelectorAll("pre"));
  console.log("Hello World!")
  console.log(codeBlocks[0])

  for (let codeBlock of codeBlocks) {
    let wrapper = document.createElement("div");
    wrapper.style.position = "relative";

    let copyButton = document.createElement("button");
    copyButton.className = "copy-code";
    copyButton.innerHTML = copyButtonLabel;

    codeBlock.setAttribute("tabindex", "0");
    codeBlock.appendChild(copyButton);
    // wrap codebock with relative parent element
    codeBlock.parentNode!.insertBefore(wrapper, codeBlock);
    console.log(codeBlock)
    wrapper.appendChild(codeBlock);

    copyButton.addEventListener("click", async () => {
      await copyCode(codeBlock, copyButton);
    });
  }

  async function copyCode(block, button) {
    let code = block.querySelector("code");
    let text = code.innerText;

    await navigator.clipboard.writeText(text);

    // visual feedback that task is completed
    button.innerText = "Code Copied";

    setTimeout(() => {
      button.innerText = copyButtonLabel;
    }, 700);
  }
  </script>
