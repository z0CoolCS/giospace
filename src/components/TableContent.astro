---

export type Props = {
    pageHeadings : Array<{depth:number,text: string; slug: string }>
}

const { pageHeadings } = Astro.props;
---
<style>

    ul {
        list-style: none;
    }
    a {
        text-decoration: none;
    }
</style>

<aside id="toc" class="fixed right-5 top-14 bg-base-300 rounded-md text-xs w-40 z-50">
    <h2 id="toggle-toc" class="text-sm mx-5 mt-5 cursor-pointer" >Table of Content</h2>
    {
    pageHeadings && 
    (<ul id="toc-list" class="list-none mt-0 pt-0 px-3 break-normal hidden">{pageHeadings.map( (h) => { 
        if (h.depth == 2) {
            return <li> <a href={`#${h.slug}`} class="no-underline">
            * {h.text}</a></li> 
        } else if (h.depth == 3) {
            return <li> <a href={`#${h.slug}`} class="no-underline">
            &emsp;
            ** {h.text}</a></li> 
        }
        else if (h.depth == 4) {
            return <li> <a href={`#${h.slug}`} class="no-underline">
            &emsp;&emsp;
            *** {h.text}</a></li> 
        }
        // else if (h.depth == 5) {
        //     return <li> <a href={`#${h.slug}`} class="no-underline">
        //     &emsp;&emsp;&emsp;
        //     **** {h.text}</a></li> 
        // }
        
        })} </ul>) 
    }
</aside>

<script>

    const tableContent = document.getElementById("toggle-toc");
    var tocList = document.getElementById('toc-list');
    
    tableContent.addEventListener("click", () => {
        //console.log("Hello, on client");
        tocList.classList.toggle('hidden'); 
    });
</script>